{"version":3,"file":"static/js/809.91379fc7.chunk.js","mappings":"4TACAA,IAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,mCAET,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,oGACmBF,IAAAA,IAAA,sCAAyCC,IAAWE,OAAM,SAAAC,GAAG,OAAIA,EAAIC,OAAR,IADhF,cACEC,EADF,yBAEEA,EAASC,KAAKC,SAFhB,kEAKA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA8BC,GAA9B,uFACkBV,IAAAA,IAAA,iBAAoBU,EAApB,oBAAuCT,IAAWE,OAAM,SAAAC,GAAG,OAAIA,EAAIC,OAAR,IAD7E,cACCC,EADD,yBAEEA,EAASC,MAFX,kEAKA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAA8BD,GAA9B,uFACkBV,IAAAA,IAAA,iBAAoBU,EAApB,4BAA+CT,IAAWE,OAAM,SAAAC,GAAG,OAAIA,EAAIC,OAAR,IADrF,cACCC,EADD,yBAEEA,EAASC,KAAKK,MAFhB,kEAKA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAiCH,GAAjC,uFACkBV,IAAAA,IAAA,iBAAoBU,EAApB,4BAA+CT,EAA/C,2BAAgFE,OAAM,SAAAC,GAAG,OAAIA,EAAIC,OAAR,IAD3G,cACCC,EADD,yBAEEA,EAASC,MAFX,kEAMA,SAAeO,EAAtB,+CAAO,OAAP,oBAAO,WAA2BC,GAA3B,uFACkBf,IAAAA,IAAA,iCAAoCC,EAApC,kBAAqDc,IAASZ,OAAM,SAAAC,GAAG,OAAIA,EAAIC,OAAR,IADzF,cACCC,EADD,yBAEEA,EAASC,MAFX,kE,wHCrBQ,SAASS,IACtB,OAA2BC,EAAAA,EAAAA,UAAS,IAApC,eAAOC,EAAP,KAAeC,EAAf,KAMA,OAJAC,EAAAA,EAAAA,YAAU,WACc,IAAlBF,EAAOG,SACXnB,EAAAA,EAAAA,MAAsBoB,KAAKH,EAC5B,GAAE,CAACD,KAEF,iCACE,2CACCA,IACC,wBACGA,EAAOK,KAAI,SAAAC,GAAK,OACf,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAME,IAA3B,SACGF,EAAMG,MAAQH,EAAMI,SAFhBJ,EAAME,GADA,QAW1B,C","sources":["services/MoviesAPI.js","vievs/HomeView.js"],"sourcesContent":["import axios from 'axios';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '3e74a828484d6b0f83071233fd134bba'\n\nexport async function fetchTrendingMovies() {\n   const response = await axios.get(`/trending/movie/day?api_key=${API_KEY}`).catch(err => err.message);\n  return response.data.results;\n}\n\nexport async function fetchMovieById(movieId) {\n  const response = await axios.get(`/movie/${movieId}?api_key=${API_KEY}`).catch(err => err.message);\n  return response.data;\n}\n\nexport async function fetchMovieCast(movieId) {\n  const response = await axios.get(`/movie/${movieId}/credits?api_key=${API_KEY}`).catch(err => err.message);\n  return response.data.cast;\n}\n\nexport async function fetchMovieReviews(movieId) {\n  const response = await axios.get(`/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`).catch(err => err.message);\n  return response.data;\n}\n\n\nexport async function fetchSearch(query) {\n  const response = await axios.get(`/search/movie/?api_key=${API_KEY}&query=${query}`).catch(err => err.message);\n  return response.data;\n}","import { fetchTrendingMovies } from '../services/MoviesAPI';\nimport { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\n\nexport default function HomeView() {\n  const [movies, setMovie] = useState([]);\n\n  useEffect(() => {\n    if (movies.length !== 0) return;\n    fetchTrendingMovies().then(setMovie);\n  }, [movies]);\n  return (\n    <>\n      <h1>Tranding today</h1>\n      {movies && (\n        <ul>\n          {movies.map(movie => (\n            <li key={movie.id}>\n              <Link to={`/movies/${movie.id}`}>\n                {movie.name || movie.title}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      )}\n    </>\n  );\n}\n"],"names":["axios","API_KEY","fetchTrendingMovies","catch","err","message","response","data","results","fetchMovieById","movieId","fetchMovieCast","cast","fetchMovieReviews","fetchSearch","query","HomeView","useState","movies","setMovie","useEffect","length","then","map","movie","to","id","name","title"],"sourceRoot":""}