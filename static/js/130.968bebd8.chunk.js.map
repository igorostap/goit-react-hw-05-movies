{"version":3,"file":"static/js/130.968bebd8.chunk.js","mappings":"gQAEaA,EAAYC,EAAAA,GAAAA,IAAH,wCAGTC,EAAgBD,EAAAA,GAAAA,IAAH,wC,SCMX,SAASE,IACtB,OAA2BC,EAAAA,EAAAA,UAAS,IAApC,eAAOC,EAAP,KAAeC,EAAf,KACMC,GAASC,EAAAA,EAAAA,MACTC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,OACjBC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAeP,EAAOQ,SAASC,KAAKV,EACrC,GAAE,CAACC,EAAOQ,UAIX,OACE,8BACGV,IACC,iCACE,mBAAQY,KAAK,SAASC,QAPb,WAAO,IAAD,IACrBP,EAAQ,iBAACF,QAAD,IAACA,GAAD,UAACA,EAAUU,aAAX,aAAC,EAAiBC,YAAlB,QAA0B,IACnC,EAKO,sBAGA,UAACpB,EAAD,YACE,gBACEqB,IAAG,yCAAoChB,EAAOiB,aAC9CC,IAAKlB,EAAOmB,MACZC,MAAM,SAER,UAACvB,EAAD,YACE,0BACGG,EAAOmB,MADV,MACoBnB,EAAOqB,aAD3B,SAGA,sCACA,uBAAIrB,EAAOsB,YACX,oCACA,uBACGtB,EAAOuB,QAAUvB,EAAOuB,OAAOC,KAAI,SAAAC,GAAE,OAAIA,EAAGC,IAAP,IAAaC,KAAK,cAI9D,mBACA,4CACA,SAAC,KAAD,CAASC,GAAG,OAAZ,mBACA,mBACA,SAAC,KAAD,CAASA,GAAG,UAAZ,sBACA,mBACA,SAAC,KAAD,QAKT,C,4MCzDDC,IAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,mCAET,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,oGACmBF,IAAAA,IAAA,sCAAyCC,IAAWE,OAAM,SAAAC,GAAG,OAAIA,EAAIC,OAAR,IADhF,cACEC,EADF,yBAEEA,EAASC,KAAKC,SAFhB,kEAKA,SAAe5B,EAAtB,+CAAO,OAAP,oBAAO,WAA8BC,GAA9B,uFACkBmB,IAAAA,IAAA,iBAAoBnB,EAApB,oBAAuCoB,IAAWE,OAAM,SAAAC,GAAG,OAAIA,EAAIC,OAAR,IAD7E,cACCC,EADD,yBAEEA,EAASC,MAFX,kEAKA,SAAeE,EAAtB,+CAAO,OAAP,oBAAO,WAA8B5B,GAA9B,uFACkBmB,IAAAA,IAAA,iBAAoBnB,EAApB,4BAA+CoB,IAAWE,OAAM,SAAAC,GAAG,OAAIA,EAAIC,OAAR,IADrF,cACCC,EADD,yBAEEA,EAASC,KAAKG,MAFhB,kEAKA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAiC9B,GAAjC,uFACkBmB,IAAAA,IAAA,iBAAoBnB,EAApB,4BAA+CoB,EAA/C,2BAAgFE,OAAM,SAAAC,GAAG,OAAIA,EAAIC,OAAR,IAD3G,cACCC,EADD,yBAEEA,EAASC,MAFX,kEAMA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAA2BC,GAA3B,uFACkBb,IAAAA,IAAA,iCAAoCC,EAApC,kBAAqDY,IAASV,OAAM,SAAAC,GAAG,OAAIA,EAAIC,OAAR,IADzF,cACCC,EADD,yBAEEA,EAASC,MAFX,kE","sources":["components/MovieDetailsPage/MovieDetails.styled.js","components/MovieDetailsPage/MovieDetailsPage.js","services/MoviesAPI.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.div`\ndisplay: flex;\n`\nexport const ContainerInfo = styled.div`\npadding: 10px;\n`","import { fetchMovieById } from 'services/MoviesAPI';\nimport { useState, useEffect } from 'react';\nimport {\n  useParams,\n  NavLink,\n  Outlet,\n  useLocation,\n  useNavigate,\n} from 'react-router-dom';\nimport { Container, ContainerInfo } from './MovieDetails.styled';\n\nexport default function MovieDetailsPage() {\n  const [movies, setMovie] = useState([]);\n  const params = useParams();\n  const location = useLocation();\n  const navigate = useNavigate();\n  useEffect(() => {\n    fetchMovieById(params.movieId).then(setMovie);\n  }, [params.movieId]);\n  const onGoBack = () => {\n    navigate(location?.state?.from ?? '/');\n  };\n  return (\n    <>\n      {movies && (\n        <>\n          <button type=\"button\" onClick={onGoBack}>\n            Go back\n          </button>\n          <Container>\n            <img\n              src={`https://image.tmdb.org/t/p/w500${movies.poster_path}`}\n              alt={movies.title}\n              width=\"240\"\n            ></img>\n            <ContainerInfo>\n              <h2>\n                {movies.title} ( {movies.release_date} )\n              </h2>\n              <h3>Overview</h3>\n              <p>{movies.overview}</p>\n              <h3>Genres</h3>\n              <p>\n                {movies.genres && movies.genres.map(el => el.name).join(' ')}\n              </p>\n            </ContainerInfo>\n          </Container>\n          <hr />\n          <h3>AdditionalInfo</h3>\n          <NavLink to=\"cast\">Cast</NavLink>\n          <br />\n          <NavLink to=\"reviews\">Reviews</NavLink>\n          <hr />\n          <Outlet />\n        </>\n      )}\n    </>\n  );\n}\n","import axios from 'axios';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '3e74a828484d6b0f83071233fd134bba'\n\nexport async function fetchTrendingMovies() {\n   const response = await axios.get(`/trending/movie/day?api_key=${API_KEY}`).catch(err => err.message);\n  return response.data.results;\n}\n\nexport async function fetchMovieById(movieId) {\n  const response = await axios.get(`/movie/${movieId}?api_key=${API_KEY}`).catch(err => err.message);\n  return response.data;\n}\n\nexport async function fetchMovieCast(movieId) {\n  const response = await axios.get(`/movie/${movieId}/credits?api_key=${API_KEY}`).catch(err => err.message);\n  return response.data.cast;\n}\n\nexport async function fetchMovieReviews(movieId) {\n  const response = await axios.get(`/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`).catch(err => err.message);\n  return response.data;\n}\n\n\nexport async function fetchSearch(query) {\n  const response = await axios.get(`/search/movie/?api_key=${API_KEY}&query=${query}`).catch(err => err.message);\n  return response.data;\n}"],"names":["Container","styled","ContainerInfo","MovieDetailsPage","useState","movies","setMovie","params","useParams","location","useLocation","navigate","useNavigate","useEffect","fetchMovieById","movieId","then","type","onClick","state","from","src","poster_path","alt","title","width","release_date","overview","genres","map","el","name","join","to","axios","API_KEY","fetchTrendingMovies","catch","err","message","response","data","results","fetchMovieCast","cast","fetchMovieReviews","fetchSearch","query"],"sourceRoot":""}