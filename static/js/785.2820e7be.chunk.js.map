{"version":3,"file":"static/js/785.2820e7be.chunk.js","mappings":"wOAIe,SAASA,IACtB,OAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAIR,OAHAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAkBH,GAASI,MAAK,SAAAC,GAAI,OAAIN,EAAWM,EAAKC,QAApB,GACrC,GAAE,CAACN,KAEF,8BACGF,IACC,8BACsB,IAAnBA,EAAQS,QACP,gDAEA,wBACGT,EAAQU,KAAI,SAAAC,GAAE,OACb,2BACE,wBAAKA,EAAGC,UACR,uBAAID,EAAGE,YAFAF,EAAGG,GADC,SAY5B,C,4MC5BDC,IAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,mCAGT,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,oGACmBF,IAAAA,IAAA,sCAAyCC,IAAWE,OAAM,SAAAC,GAAG,OAAIA,EAAIC,OAAR,IADhF,cACEC,EADF,yBAEEA,EAASd,KAAKC,SAFhB,kEAKA,SAAec,EAAtB,+CAAO,OAAP,oBAAO,WAA8BpB,GAA9B,uFACkBa,IAAAA,IAAA,iBAAoBb,EAApB,oBAAuCc,IAAWE,OAAM,SAAAC,GAAG,OAAII,MAAM,aAAV,IAD7E,cACCF,EADD,yBAEEA,EAASd,MAFX,kEAKA,SAAeiB,EAAtB,+CAAO,OAAP,oBAAO,WAA8BtB,GAA9B,uFACkBa,IAAAA,IAAA,iBAAoBb,EAApB,4BAA+Cc,IAAWE,OAAM,SAAAC,GAAG,OAAIA,EAAIC,OAAR,IADrF,cACCC,EADD,yBAEEA,EAASd,KAAKkB,MAFhB,kEAKA,SAAepB,EAAtB,+CAAO,OAAP,oBAAO,WAAiCH,GAAjC,uFACkBa,IAAAA,IAAA,iBAAoBb,EAApB,4BAA+Cc,EAA/C,2BAAgFE,OAAM,SAAAC,GAAG,OAAIA,EAAIC,OAAR,IAD3G,cACCC,EADD,yBAEEA,EAASd,MAFX,kEAMA,SAAemB,EAAtB,+CAAO,OAAP,oBAAO,WAA2BC,GAA3B,uFACkBZ,IAAAA,IAAA,iCAAoCC,EAApC,kBAAqDW,IAAST,OAAM,SAAAC,GAAG,OAAIA,EAAIC,OAAR,IADzF,cACCC,EADD,yBAEEA,EAASd,MAFX,kE","sources":["components/Reviews/Reviews.js","services/MoviesAPI.js"],"sourcesContent":["import { fetchMovieReviews } from 'services/MoviesAPI';\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nexport default function MovieReviews() {\n  const [reviews, setReviews] = useState([]);\n  const { movieId } = useParams();\n  useEffect(() => {\n    fetchMovieReviews(movieId).then(data => setReviews(data.results));\n  }, [movieId]);\n  return (\n    <>\n      {reviews && (\n        <>\n          {reviews.length === 0 ? (\n            <p>No any reviews here</p>\n          ) : (\n            <ul>\n              {reviews.map(el => (\n                <li key={el.id}>\n                  <h3>{el.author}</h3>\n                  <p>{el.content}</p>\n                </li>\n              ))}\n            </ul>\n          )}\n        </>\n      )}\n    </>\n  );\n}\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '3e74a828484d6b0f83071233fd134bba'\n\n\nexport async function fetchTrendingMovies() {\n   const response = await axios.get(`/trending/movie/day?api_key=${API_KEY}`).catch(err => err.message);\n  return response.data.results;\n}\n\nexport async function fetchMovieById(movieId) {\n  const response = await axios.get(`/movie/${movieId}?api_key=${API_KEY}`).catch(err => alert('No results'));\n  return response.data;\n}\n\nexport async function fetchMovieCast(movieId) {\n  const response = await axios.get(`/movie/${movieId}/credits?api_key=${API_KEY}`).catch(err => err.message);\n  return response.data.cast;\n}\n\nexport async function fetchMovieReviews(movieId) {\n  const response = await axios.get(`/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`).catch(err => err.message);\n  return response.data;\n}\n\n\nexport async function fetchSearch(query) {\n  const response = await axios.get(`/search/movie/?api_key=${API_KEY}&query=${query}`).catch(err => err.message);\n  return response.data;\n}"],"names":["MovieReviews","useState","reviews","setReviews","movieId","useParams","useEffect","fetchMovieReviews","then","data","results","length","map","el","author","content","id","axios","API_KEY","fetchTrendingMovies","catch","err","message","response","fetchMovieById","alert","fetchMovieCast","cast","fetchSearch","query"],"sourceRoot":""}