{"version":3,"file":"static/js/463.8eae436c.chunk.js","mappings":"4TACAA,IAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,mCAET,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,oGACmBF,IAAAA,IAAA,sCAAyCC,IAAWE,OAAM,SAAAC,GAAG,OAAIA,EAAIC,OAAR,IADhF,cACEC,EADF,yBAEEA,EAASC,KAAKC,SAFhB,kEAKA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA8BC,GAA9B,uFACkBV,IAAAA,IAAA,iBAAoBU,EAApB,oBAAuCT,IAAWE,OAAM,SAAAC,GAAG,OAAIA,EAAIC,OAAR,IAD7E,cACCC,EADD,yBAEEA,EAASC,MAFX,kEAKA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAA8BD,GAA9B,uFACkBV,IAAAA,IAAA,iBAAoBU,EAApB,4BAA+CT,IAAWE,OAAM,SAAAC,GAAG,OAAIA,EAAIC,OAAR,IADrF,cACCC,EADD,yBAEEA,EAASC,KAAKK,MAFhB,kEAKA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAiCH,GAAjC,uFACkBV,IAAAA,IAAA,iBAAoBU,EAApB,4BAA+CT,EAA/C,2BAAgFE,OAAM,SAAAC,GAAG,OAAIA,EAAIC,OAAR,IAD3G,cACCC,EADD,yBAEEA,EAASC,MAFX,kEAMA,SAAeO,EAAtB,+CAAO,OAAP,oBAAO,WAA2BC,GAA3B,uFACkBf,IAAAA,IAAA,iCAAoCC,EAApC,kBAAqDc,IAASZ,OAAM,SAAAC,GAAG,OAAIA,EAAIC,OAAR,IADzF,cACCC,EADD,yBAEEA,EAASC,MAFX,kE,wKCVQ,SAASS,IACtB,OAA4BC,EAAAA,EAAAA,YAA5B,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,IAAgB,CAAC,GAAzD,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAAoCL,EAAAA,EAAAA,WAClC,kCAAMI,EAAaE,IAAI,iBAAvB,QAAoC,EAApC,IADF,eAAOC,EAAP,KAAmBC,EAAnB,KAGA,GAAmCC,EAAAA,EAAAA,MAA3BC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,aACZC,GAAWC,EAAAA,EAAAA,MAkBjB,OAhBAC,EAAAA,EAAAA,YAAU,WACHP,EAAWQ,SAChBlB,EAAAA,EAAAA,IAAYU,GAAYS,MAAK,SAAA1B,GAC3B,GAAKA,EAAKC,QAAV,CAGA,GAA2B,IAAvBD,EAAK2B,cAGP,OAFAC,IAAAA,MAAa,mBACbhB,IAGFA,EAAUZ,EAAKC,SACfc,EAAgB,CAAEc,OAAQZ,GAPzB,CAQF,GACF,GAAE,CAACA,EAAYF,KAGd,iCACE,kBAAMe,SAAUT,GAAa,SAAAU,GAAK,OAAIb,EAAca,EAAMd,WAAxB,IAAlC,WACE,iDAEE,0BAAOe,KAAK,QAAWZ,EAAS,oBAElC,mBAAQY,KAAK,SAAb,uBAGDrB,IACC,iCACE,6CACA,wBACGA,EAAOsB,KAAI,SAAAC,GAAK,OACf,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAME,IAAMC,MAAO,CAAEC,KAAMhB,GAAhD,SACGY,EAAMK,MAAQL,EAAMM,SAFhBN,EAAME,GADA,WAY5B,CA1DDR,IAAAA,QAAiB,CACfa,aAAa,EACbC,cAAe,iBACfC,QAAS,OACTC,gBAAiB,O","sources":["services/MoviesAPI.js","vievs/Movies.js"],"sourcesContent":["import axios from 'axios';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '3e74a828484d6b0f83071233fd134bba'\n\nexport async function fetchTrendingMovies() {\n   const response = await axios.get(`/trending/movie/day?api_key=${API_KEY}`).catch(err => err.message);\n  return response.data.results;\n}\n\nexport async function fetchMovieById(movieId) {\n  const response = await axios.get(`/movie/${movieId}?api_key=${API_KEY}`).catch(err => err.message);\n  return response.data;\n}\n\nexport async function fetchMovieCast(movieId) {\n  const response = await axios.get(`/movie/${movieId}/credits?api_key=${API_KEY}`).catch(err => err.message);\n  return response.data.cast;\n}\n\nexport async function fetchMovieReviews(movieId) {\n  const response = await axios.get(`/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`).catch(err => err.message);\n  return response.data;\n}\n\n\nexport async function fetchSearch(query) {\n  const response = await axios.get(`/search/movie/?api_key=${API_KEY}&query=${query}`).catch(err => err.message);\n  return response.data;\n}","import { useState, useEffect } from 'react';\nimport { fetchSearch } from '../services/MoviesAPI';\nimport { useSearchParams, Link } from 'react-router-dom';\nimport toastr from 'toastr';\nimport { useLocation } from 'react-router-dom';\n\nimport { useForm } from 'react-hook-form';\n\ntoastr.options = {\n  progressBar: true,\n  positionClass: 'toast-top-left',\n  timeOut: '3000',\n  extendedTimeOut: '1000',\n};\n\nexport default function Movies() {\n  const [movies, setMovies] = useState();\n  const [searchParams, setSearchParams] = useSearchParams({});\n  const [searchName, setSearchName] = useState(\n    () => searchParams.get('search') ?? ''\n  );\n  const { register, handleSubmit } = useForm();\n  const location = useLocation();\n\n  useEffect(() => {\n    if (!searchName.trim()) return;\n    fetchSearch(searchName).then(data => {\n      if (!data.results) {\n        return;\n      }\n      if (data.total_results === 0) {\n        toastr.error('No results');\n        setMovies();\n        return;\n      }\n      setMovies(data.results);\n      setSearchParams({ search: searchName });\n    });\n  }, [searchName, setSearchParams]);\n\n  return (\n    <>\n      <form onSubmit={handleSubmit(value => setSearchName(value.searchName))}>\n        <label>\n          Imput movie name\n          <input type=\"text\" {...register('searchName')}></input>\n        </label>\n        <button type=\"submit\">Search</button>\n      </form>\n\n      {movies && (\n        <>\n          <h1>Searched movies</h1>\n          <ul>\n            {movies.map(movie => (\n              <li key={movie.id}>\n                <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n                  {movie.name || movie.title}\n                </Link>\n              </li>\n            ))}\n          </ul>\n        </>\n      )}\n    </>\n  );\n}\n"],"names":["axios","API_KEY","fetchTrendingMovies","catch","err","message","response","data","results","fetchMovieById","movieId","fetchMovieCast","cast","fetchMovieReviews","fetchSearch","query","Movies","useState","movies","setMovies","useSearchParams","searchParams","setSearchParams","get","searchName","setSearchName","useForm","register","handleSubmit","location","useLocation","useEffect","trim","then","total_results","toastr","search","onSubmit","value","type","map","movie","to","id","state","from","name","title","progressBar","positionClass","timeOut","extendedTimeOut"],"sourceRoot":""}